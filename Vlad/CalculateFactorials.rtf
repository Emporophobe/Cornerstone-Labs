{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red51\green153\blue255;\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title CalculateFactorials.rtf}}

\deflang1033\pard\plain\f0\fs20 \cf0\i /*
\par Authors: Vladislav Martin and Michael Wong
\par Filename: CalculateFactorials.cpp
\par Assignment: C++ Lab #6
\par Description --> This program is meant to find the factorial of a user inputted number, n.
\par 				Next, permutations and combinations are calculated after the user provides a second number, k, less than n.
\par 				These values are displayed to the user once calculations are completed, at the end of the program.
\par 	1. Specifics: The recursive_factorial() function is not implemented in this program but is included to show that we know how to implement recursion in a function;
\par 				  The total in factorial() is initialized to the value of 1 so that if the users input is 0 or 1, the output of the function is 1;
\par 				  All values are declared as unsigned longs to avoid casting errors when calculating the factorial (the largest calculated value in this program) 
\par 	2. Inputs: Positive integers n and k, where n is less than 13 and k is less than n
\par 	3. Outputs: n!, nPk, and nCk
\par 	4. Functions: int main(), unsigned long recursive_factorial(unsigned long n), unsigned long factorial(unsigned long n), 
\par 				  unsigned long permutation(unsigned long n, unsigned long k), unsigned long combination(unsigned long n, unsigned long k)
\par 	5. Updated: October 20th, 2014
\par */
\par 
\par \i0\cf1 #include <iostream>
\par #include <cstdlib>
\par #include <cmath>
\par 
\par \cf2\b using\b0  \b namespace\b0  std\cf3\b ;
\par 
\par \b0\cf0\i ///Calculates the factorial of the input parameter by recursively calling the function within itself
\par \i0\cf2\b unsigned\b0  \b long\b0  recursive_factorial\cf3\b (\cf2 unsigned\b0  \b long\b0  n\cf3\b )
\par \{
\par \b0\cf2 	\b if\b0  \cf3\b (\b0\cf2 n \cf3\b ==\b0\cf2  \cf4 1\cf2  \cf3\b ||\b0\cf2  n \cf3\b ==\b0\cf2  \cf4 0\cf3\b )\b0\cf2  \cf0\i //break here, also 0! = 1
\par \i0\cf2 	\cf3\b \{
\par \b0\cf2 		\b return\b0  \cf4 1\cf3\b ;
\par \b0\cf2 	\cf3\b \}
\par \b0\cf2 	\b else
\par \b0 	\cf3\b \{
\par \b0\cf2 		\b return\b0  n \cf3\b *\b0\cf2  recursive_factorial\cf3\b (\b0\cf2 n\cf3\b -\b0\cf4 1\cf3\b );
\par \b0\cf2 	\cf3\b \}
\par \}
\par 
\par \b0\cf0\i //Calculates the factorial of the input parameter by using a for loop
\par \i0\cf2\b unsigned\b0  \b long\b0  factorial\cf3\b (\cf2 unsigned\b0  \b long\b0  n\cf3\b )
\par \{
\par \b0\cf2 	\b unsigned\b0  \b long\b0  total \cf3\b =\b0\cf2  \cf4 1\cf3\b ;
\par \b0\cf2 	
\par 	\b for\b0  \cf3\b (\cf2 unsigned\b0  \b long\b0  i \cf3\b =\b0\cf2  n\cf3\b ;\b0\cf2  i \cf3\b >\b0\cf2  \cf4 0\cf3\b ;\b0\cf2  i\cf3\b --)
\par \b0\cf2 	\cf3\b \{
\par \b0\cf2 		total \cf3\b *=\b0\cf2  i\cf3\b ;
\par \b0\cf2 	\cf3\b \}
\par \b0\cf2 	\b return\b0  total\cf3\b ;
\par \}
\par 
\par 
\par \b0\cf0\i //Calculates a permutation of k size out of a total size of n
\par \i0\cf2\b unsigned\b0  \b long\b0  permutation\cf3\b (\cf2 unsigned\b0  \b long\b0  n\cf3\b ,\b0\cf2  \b unsigned\b0  \b long\b0  k\cf3\b )
\par \{
\par \b0\cf2 	\b unsigned\b0  \b long\b0  final_value \cf3\b =\b0\cf2  \cf4 1\cf3\b ;
\par \b0\cf2 	
\par 	\b for\b0  \cf3\b (\cf2 unsigned\b0  \b long\b0  i \cf3\b =\b0\cf2  n\cf3\b ;\b0\cf2  i \cf3\b >\b0\cf2  \cf3\b (\b0\cf2 n\cf3\b -\b0\cf2 k\cf3\b );\b0\cf2  i\cf3\b --)\b0\cf2  \cf0\i //n!/(n-k)! = n*(n-1)*... until k+1
\par \i0\cf2 	\cf3\b \{
\par \b0\cf2 		final_value \cf3\b *=\b0\cf2  i\cf3\b ;
\par \b0\cf2 	\cf3\b \}
\par \b0\cf2 	\b return\b0  final_value\cf3\b ;
\par \}
\par 
\par \b0\cf0\i //Calculates a combination of k size out of a total size of n, making use of the previously declared permutation() and factorial() functions
\par \i0\cf2\b unsigned\b0  \b long\b0  combination\cf3\b (\cf2 unsigned\b0  \b long\b0  n\cf3\b ,\b0\cf2  \b unsigned\b0  \b long\b0  k\cf3\b )
\par \{
\par \b0\cf2 	\b return\b0  \cf3\b (\b0\cf2 permutation\cf3\b (\b0\cf2 n\cf3\b ,\b0\cf2  k\cf3\b ))/(\b0\cf2 factorial\cf3\b (\b0\cf2 k\cf3\b ));
\par \}
\par 
\par \cf2 int\b0  main\cf3\b (\cf2 void\cf3 )
\par \{
\par \b0\cf2 	\b unsigned\b0  \b long\b0  n\cf3\b ,\b0\cf2  k\cf3\b ;
\par \b0\cf2 	
\par 	cout \cf3\b <<\b0\cf2  \cf5\b "Input n (less than 13): "\cf3 ;
\par \b0\cf2 	cin \cf3\b >>\b0\cf2  n\cf3\b ;
\par \b0\cf2 	
\par 	cout \cf3\b <<\b0\cf2  \cf5\b "Input k (less than "\b0\cf2  \cf3\b <<\b0\cf2  n \cf3\b <<\b0\cf2  \cf5\b "): "\cf3 ;\b0\cf2  
\par 	cin \cf3\b >>\b0\cf2  k\cf3\b ;
\par \b0\cf2 	
\par 	\cf0\i //Display the calculated values to the user
\par \i0\cf2 	cout \cf3\b <<\b0\cf2  n \cf3\b <<\b0\cf2  \cf5\b "! = "\b0\cf2  \cf3\b <<\b0\cf2  factorial\cf3\b (\b0\cf2 n\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2 	cout \cf3\b <<\b0\cf2  n \cf3\b <<\b0\cf2  \cf5\b "P"\b0\cf2  \cf3\b <<\b0\cf2  k \cf3\b <<\b0\cf2  \cf5\b " = "\b0\cf2  \cf3\b <<\b0\cf2  permutation\cf3\b (\b0\cf2 n\cf3\b ,\b0\cf2  k\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2 	cout \cf3\b <<\b0\cf2  n \cf3\b <<\b0\cf2  \cf5\b "C"\b0\cf2  \cf3\b <<\b0\cf2  k \cf3\b <<\b0\cf2  \cf5\b " = "\b0\cf2  \cf3\b <<\b0\cf2 combination\cf3\b (\b0\cf2 n\cf3\b ,\b0\cf2  k\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2 	
\par 	system\cf3\b (\cf5 "pause"\cf3 );
\par \b0\cf2 	\b return\b0  \cf4 0\cf3\b ;
\par \}
\par }