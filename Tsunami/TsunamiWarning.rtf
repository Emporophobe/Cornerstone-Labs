{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red51\green153\blue255;\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title TsunamiWarning.rtf}}

\deflang1033\pard\plain\f0\fs22 \cf0\i /*
\par Authors: Michael Wong, Vladislav Martin
\par Filename: TsunamiWarning.cpp
\par Description: Data, organized into columns, is gathered from an input file, analyzed, and stored into separate arrays for each column. The steepness of the waves is calculated from the wave height and length and if the steepness is greater than 1/7 then the data associated to the wave is stored in a separate array, warnings[]. The warnings array is the output of this program to warn when there are signs of a tsunami, whenever waves of too great of a steepness are detected.
\par                1. Specifics: manipulated values are all doubles
\par                2. Input: data.txt
\par                3. Output: Warning.txt containing data associated with waves where the steepness is greater than 1/7
\par                4. Functions: int main(), double arrayAvg(double array[], int size), printArray (double array[], int size)
\par                5. Updated: 10/31/2014
\par */
\par \i0\cf1 #include <iostream>
\par #include <fstream>
\par #include <string>
\par #include <iomanip>
\par \cf2  
\par \b using\b0  \b namespace\b0  std\cf3\b ;
\par 
\par \cf2 double\b0  arrayAvg\cf3\b (\cf2 double\b0  array\cf3\b [],\b0\cf2  \b int\b0  size\cf3\b )\b0\cf2  \cf0\i //Returns the average of all of the values contained in the inputted 1-D array
\par \i0\cf3\b \{\b0\cf2       
\par        \b double\b0  total\cf3\b ;
\par \b0\cf2        \b for\cf3 (\cf2 int\b0  i\cf3\b =\b0\cf4 0\cf3\b ;\b0\cf2  i\cf3\b <\b0\cf2 size\cf3\b ;\b0\cf2  i\cf3\b ++)
\par \b0\cf2        \cf3\b \{
\par \b0\cf2               total\cf3\b +=\b0\cf2 array\cf3\b [\b0\cf2 i\cf3\b ];
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        
\par        \b return\b0  total\cf3\b /\b0\cf2 size\cf3\b ;
\par \}
\par \b0\cf2  
\par \b void\b0  printArray\cf3\b (\cf2 double\b0  array\cf3\b [],\b0\cf2  \b int\b0  size\cf3\b )\b0\cf2  \cf0\i //Prints the values of the inputted 1-D array
\par \i0\cf3\b \{
\par \b0\cf2        \b double\b0  filled_array\cf3\b [\b0\cf2 size\cf3\b ];
\par \b0\cf2        
\par        \b for\b0  \cf3\b (\cf2 int\b0  i \cf3\b =\b0\cf2  \cf4 0\cf3\b ;\b0\cf2  i \cf3\b <\b0\cf2  size\cf3\b ;\b0\cf2  \cf3\b ++\b0\cf2 i\cf3\b )
\par \b0\cf2        \cf3\b \{
\par \b0\cf2               cout \cf3\b <<\b0\cf2  array\cf3\b [\b0\cf2 i\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b " "\cf3 ;
\par \b0\cf2               filled_array\cf3\b [\b0\cf2 i\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  array\cf3\b [\b0\cf2 i\cf3\b ];
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        cout \cf3\b <<\b0\cf2  endl \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \}
\par \b0\cf2  
\par \b int\b0  main\cf3\b (\cf2 void\cf3 )
\par \{
\par \b0\cf2        \b int\b0  counter \cf3\b =\b0\cf2  \cf4 0\cf3\b ;
\par \b0\cf2        \b int\b0  warning_counter \cf3\b =\b0\cf2  \cf4 0\cf3\b ;
\par \b0\cf2        \b double\b0  maxSteepness \cf3\b =\b0\cf2  \cf4 1.0\cf2  \cf3\b /\b0\cf2  \cf4 7\cf3\b ;
\par \b0\cf2        
\par        \b double\b0  year\cf3\b ,\b0\cf2  month\cf3\b ,\b0\cf2  day\cf3\b ,\b0\cf2  hour\cf3\b ,\b0\cf2  minute\cf3\b ,\b0\cf2  height\cf3\b ,\b0\cf2  length\cf3\b ;
\par \b0\cf2        
\par        ifstream readings\cf3\b (\cf5 "data.txt"\cf3 );
\par \b0\cf2        ifstream readings_findLength\cf3\b (\cf5 "data.txt"\cf3 );
\par \b0\cf2        ofstream warning\cf3\b (\cf5 "Warning.txt"\cf3 );
\par \b0\cf2        
\par        string heading\cf3\b ,\b0\cf2  line\cf3\b ;
\par \b0\cf2        getline\cf3\b (\b0\cf2 readings\cf3\b ,\b0\cf2  line\cf3\b );
\par \b0\cf2        getline\cf3\b (\b0\cf2 readings_findLength\cf3\b ,\b0\cf2  line\cf3\b );
\par \b0\cf2        heading \cf3\b =\b0\cf2  line\cf3\b ;
\par \b0\cf2        
\par        \b int\b0  total_size \cf3\b =\b0\cf2  \cf4 0\cf3\b ;
\par \b0\cf2        \b double\b0  file_content \cf3\b =\b0\cf2  \cf4 0.0\cf3\b ;
\par \b0\cf2        
\par        \b while\cf3 (\b0\cf2 getline\cf3\b (\b0\cf2 readings_findLength\cf3\b ,\b0\cf2  line\cf3\b ))
\par \b0\cf2        \cf3\b \{
\par \b0\cf2               total_size\cf3\b ++;
\par \b0\cf2               \b if\b0  \cf3\b (\b0\cf2 total_size \cf3\b >\b0\cf2  \cf4 100\cf3\b )
\par \b0\cf2               \cf3\b \{
\par \b0\cf2                      cout \cf3\b <<\b0\cf2  \cf5\b "There are too many values contained in this input file. Please limit the number of rows in this file to 100."\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2                      \b return\b0  \cf4 1\cf3\b ;
\par \b0\cf2               \cf3\b \}
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        
\par        \b const\b0  \b int\b0  SIZE \cf3\b =\b0\cf2  total_size\cf3\b ;
\par \b0\cf2        \b double\b0  steepness\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  warnings\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  years\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  months\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  days\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  hours\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  minutes\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  heights\cf3\b [\b0\cf2 SIZE\cf3\b ],\b0\cf2  lengths\cf3\b [\b0\cf2 SIZE\cf3\b ];
\par \b0\cf2        
\par        \b if\cf3 (\b0\cf2 readings\cf3\b .\b0\cf2 is_open\cf3\b ())
\par \b0\cf2        \cf3\b \{
\par \b0\cf2               cout \cf3\b <<\b0\cf2  \cf5\b "File opened successfully! Reading data from the file... "\b0\cf2  \cf3\b <<\b0\cf2  endl \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2               
\par               \b while\cf3 (\b0\cf2 readings \cf3\b >>\b0\cf2  year \cf3\b >>\b0\cf2  month \cf3\b >>\b0\cf2  day \cf3\b >>\b0\cf2  hour \cf3\b >>\b0\cf2  minute \cf3\b >>\b0\cf2  height \cf3\b >>\b0\cf2  length\cf3\b )
\par \b0\cf2               \cf3\b \{
\par \b0\cf2                      steepness\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  height \cf3\b /\b0\cf2  length\cf3\b ;
\par \b0\cf2                      
\par                      years\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  year\cf3\b ;
\par \b0\cf2                      months\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  month\cf3\b ;
\par \b0\cf2                      days\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  day\cf3\b ;
\par \b0\cf2                      hours\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  hour\cf3\b ;
\par \b0\cf2                      minutes\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  minute\cf3\b ;
\par \b0\cf2                      heights\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  height\cf3\b ;
\par \b0\cf2                      lengths\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  length\cf3\b ;
\par \b0\cf2                      
\par                      \b if\b0  \cf3\b (\b0\cf2 steepness\cf3\b [\b0\cf2 counter\cf3\b ]\b0\cf2  \cf3\b >\b0\cf2  maxSteepness\cf3\b )
\par \b0\cf2                      \cf3\b \{
\par \b0\cf2                            warnings\cf3\b [\b0\cf2 warning_counter\cf3\b ]\b0\cf2  \cf3\b =\b0\cf2  counter\cf3\b ;
\par \b0\cf2                            warning_counter\cf3\b ++;
\par \b0\cf2                      \cf3\b \}
\par \b0\cf2                      counter\cf3\b ++;
\par \b0\cf2               \cf3\b \}
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        \b else
\par \b0        \cf3\b \{
\par \b0\cf2               cout \cf3\b <<\b0\cf2  \cf5\b "Everything is horrible. Try a different file. \\n"\cf3 ;
\par \b0\cf2               \b return\b0  \cf4 1\cf3\b ;
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        
\par        cout \cf3\b <<\b0\cf2  \cf5\b "The following "\b0\cf2  \cf3\b <<\b0\cf2  warning_counter \cf3\b <<\b0\cf2  \cf5\b " readings indicate dangerously steep waves: \\n\\n"\cf3 ;
\par \b0\cf2        warning \cf3\b <<\b0\cf2  \cf5\b "The following "\b0\cf2  \cf3\b <<\b0\cf2  warning_counter \cf3\b <<\b0\cf2  \cf5\b " readings indicate dangerously steep waves: \\n\\n"\cf3 ;
\par \b0\cf2               
\par 	   warning \cf3\b <<\b0\cf2  \cf5\b "YEAR"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "MONTH"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "DAY"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "HOUR"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "MINUTE"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "HEIGHT"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "LENGTH"\b0\cf2  \cf3\b <<\b0\cf2  endl \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2 	   cout \cf3\b <<\b0\cf2  \cf5\b "YEAR"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "MONTH"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "DAY"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "HOUR"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "MINUTE"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "HEIGHT"\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  \cf5\b "LENGTH"\b0\cf2  \cf3\b <<\b0\cf2  endl \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2        
\par        \b for\cf3 (\cf2 int\b0  i\cf3\b =\b0\cf4 0\cf3\b ;\b0\cf2  i\cf3\b <\b0\cf2 warning_counter\cf3\b ;\b0\cf2  i\cf3\b ++)
\par \b0\cf2        \cf3\b \{
\par \b0\cf2               \b int\b0  n \cf3\b =\b0\cf2  warnings\cf3\b [\b0\cf2 i\cf3\b ];
\par \b0\cf2               
\par \cf0\i //Print out the data pertaining to the waves that are too steep in the Warning.txt output file
\par 
\par \i0\cf2               warning \cf3\b <<\b0\cf2  years\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  months\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  days\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  hours\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  minutes\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  heights\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  lengths\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2               cout \cf3\b <<\b0\cf2  years\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  months\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  days\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  hours\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  minutes\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  heights\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  setw\cf3\b (\b0\cf4 8\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  lengths\cf3\b [\b0\cf2 n\cf3\b ]\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2        \cf3\b \}
\par \b0\cf2        
\par     \cf0\i //Print out the contents of the Warnings.txt output file to the console
\par \i0\cf2        cout \cf3\b <<\b0\cf2  \cf5\b "\\nThe average wave height is "\b0\cf2  \cf3\b <<\b0\cf2  arrayAvg\cf3\b (\b0\cf2 heights\cf3\b ,\b0\cf2  SIZE\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2        cout \cf3\b <<\b0\cf2  \cf5\b "The average wave length is "\b0\cf2  \cf3\b <<\b0\cf2  arrayAvg\cf3\b (\b0\cf2 lengths\cf3\b ,\b0\cf2  SIZE\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;
\par \b0\cf2        cout \cf3\b <<\b0\cf2  \cf5\b "The average steepness of the waves is "\b0\cf2  \cf3\b <<\b0\cf2  arrayAvg\cf3\b (\b0\cf2 steepness\cf3\b ,\b0\cf2  SIZE\cf3\b )\b0\cf2  \cf3\b <<\b0\cf2  endl\cf3\b ;\b0\cf2   
\par        
\par        system\cf3\b (\cf5 "pause"\cf3 );
\par \b0\cf2        \b return\b0  \cf4 0\cf3\b ;
\par \}
\par }